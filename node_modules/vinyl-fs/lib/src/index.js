'use strict';

var gs = require('glob-stream');
var pumpify = require('pumpify');
var toThrough = require('to-through');
var isValidGlob = require('is-valid-glob');
var createResolver = require('resolve-options');

var config = require('./options');
var prepare = require('./prepare');
var wrapVinyl = require('./wrap-vinyl');
var sourcemap = require('./sourcemap');
var readContents = require('./read-contents');
var resolveSymlinks = require('./resolve-symlinks');

function src(glob, opt) {
  var optResolver = createResolver(config, opt);

  if (!isValidGlob(glob)) {
    throw new Error('Invalid glob argument: ' + glob);
  }

  var streams = [
    gs(glob, opt),//根据glob通配找到文件，并创建stream
    wrapVinyl(optResolver),//创建file对象
    resolveSymlinks(optResolver),//
    prepare(optResolver),//预处理，跳过旧文件
    readContents(optResolver),//读取文件内容
    sourcemap(optResolver),//为文件对象添加map
  ];
  //合并多个流并返回一个duplex流
  var outputStream = pumpify.obj(streams);
  //toThrougn是包装输出一个可修正转换数据的transform流
  return toThrough(outputStream);
}


module.exports = src;
